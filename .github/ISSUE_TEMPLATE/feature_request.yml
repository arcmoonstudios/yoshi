# yoshi\.github\ISSUE_TEMPLATE\feature_request.yml
#
# **Brief:** Feature request template with business justification and technical analysis.
#
# **Module Classification:** Standard
# **Complexity Level:** Medium
# **API Stability:** Stable
#
# ~=####====A===r===c===M===o===o===n====S===t===u===d===i===o===s====X|0|$>
# + Enterprise feature request template with ROI analysis
#  - Business justification with use case validation: O(1) evaluation
#  - Technical feasibility assessment with complexity analysis: O(n) review
#  - API design proposal with backward compatibility: O(1) integration
#  - Performance impact analysis with benchmarking requirements: O(1) assessment
#  - Implementation timeline with resource allocation: O(1) planning
# ~=####====A===r===c===M===o===o===n====S===t===u===d===i===o===s====X|0|$>
# **GitHub:** ArcMoon Studios (https://github.com/arcmoonstudios)
# **Copyright:** (c) 2025 ArcMoon Studios
# **License:** Business Source License 1.1 (BSL-1.1)  
# **License Terms:** Non-production use only; commercial/production use requires paid license.
# **Effective Date:** 2025-05-25 | **Change License:** GPL v3
# **License File:** /LICENSE
# **Contact:** LordXyn@proton.me
# **Author:** Lord Xyn
# **Last Validation:** 2025-05-30

name: ✨ Feature Request
description: Suggest a new feature or enhancement for the Yoshi error handling framework
title: "[FEATURE] "
labels: ["enhancement", "needs-evaluation"]
assignees: ["na"]

body:
  - type: markdown
    attributes:
      value: |
        ## 🌙 ArcMoon Studios Enterprise Feature Request
        
        Thank you for contributing to the evolution of the Yoshi error handling framework! Your suggestions help us build better tools for mission-critical applications.
        
        **For Priority Feature Development:** Contact [LordXyn@proton.me](mailto:LordXyn@proton.me?subject=[Yoshi%20Enterprise]%20Priority%20Feature%20Request) for sponsored development with guaranteed timelines.

  - type: textarea
    id: feature-summary
    attributes:
      label: 🎯 Feature Summary
      description: A clear and concise description of the feature you'd like to see
      placeholder: Briefly describe the feature you're requesting...
    validations:
      required: true

  - type: dropdown
    id: feature-category
    attributes:
      label: 📂 Feature Category
      description: What category does this feature fall into?
      options:
        - "🔧 Core API Enhancement"
        - "⚡ Performance Optimization"
        - "🔒 Security Improvement"
        - "📊 Diagnostics & Debugging"
        - "🔄 Integration & Compatibility"
        - "📚 Documentation & Examples"
        - "🧪 Testing & Quality Assurance"
        - "🔌 Plugin & Extension System"
        - "🌐 Cross-Platform Support"
        - "📦 Build & Packaging"
      default: 0
    validations:
      required: true

  - type: textarea
    id: business-justification
    attributes:
      label: 💼 Business Justification
      description: Why is this feature important? What business problem does it solve?
      placeholder: |
        - What business problem does this solve?
        - Who would benefit from this feature?
        - What's the expected impact on productivity/reliability/performance?
        - How does this align with enterprise requirements?
    validations:
      required: true

  - type: textarea
    id: use-cases
    attributes:
      label: 🎯 Use Cases
      description: Describe specific scenarios where this feature would be valuable
      placeholder: |
        1. **Use Case 1:** When developing...
        2. **Use Case 2:** In production environments where...
        3. **Use Case 3:** For enterprise applications that...
      value: |
        1. **Use Case 1:** 
        2. **Use Case 2:** 
        3. **Use Case 3:** 
    validations:
      required: true

  - type: textarea
    id: proposed-solution
    attributes:
      label: 💡 Proposed Solution
      description: Describe your proposed implementation approach
      placeholder: |
        How do you envision this feature working? Include:
        - API design suggestions
        - Integration points with existing code
        - Performance considerations
        - Backward compatibility requirements
    validations:
      required: true

  - type: textarea
    id: api-example
    attributes:
      label: 📝 API Design Example
      description: Show how you envision the API would look and be used
      placeholder: |
        ```rust
        use yoshi::prelude::*;
        
        // Example of how the new feature would be used
        let error = Yoshi::new("Example error")
            .with_new_feature(parameters)
            .build();
        ```
      render: rust
    validations:
      required: false

  - type: dropdown
    id: priority
    attributes:
      label: ⚡ Priority Level
      description: How urgent is this feature for your use case?
      options:
        - "🔴 Critical - Blocking current project"
        - "🟠 High - Important for upcoming milestone"
        - "🟡 Medium - Would improve workflow significantly"
        - "🟢 Low - Nice to have enhancement"
      default: 2
    validations:
      required: true

  - type: textarea
    id: alternatives
    attributes:
      label: 🔄 Alternatives Considered
      description: What alternative solutions have you considered?
      placeholder: |
        - Alternative approach 1: ...
        - Alternative approach 2: ...
        - Why the proposed solution is preferred: ...
    validations:
      required: false

  - type: checkboxes
    id: implementation-considerations
    attributes:
      label: 🏗️ Implementation Considerations
      description: Check relevant implementation aspects
      options:
        - label: This feature should maintain backward compatibility
        - label: This feature may require breaking changes (major version bump)
        - label: This feature should work in `no_std` environments
        - label: This feature requires new dependencies
        - label: This feature affects performance-critical paths
        - label: This feature requires extensive documentation
        - label: This feature needs comprehensive testing

  - type: textarea
    id: performance-impact
    attributes:
      label: ⚡ Performance Impact Analysis
      description: How might this feature affect performance?
      placeholder: |
        - Compile-time impact: 
        - Runtime performance: 
        - Memory usage: 
        - Binary size: 
        - Any performance benchmarks needed: 
    validations:
      required: false

  - type: textarea
    id: testing-strategy
    attributes:
      label: 🧪 Testing Strategy
      description: How should this feature be tested?
      placeholder: |
        - Unit tests needed: 
        - Integration tests required: 
        - Performance benchmarks: 
        - Edge cases to consider: 
    validations:
      required: false

  - type: textarea
    id: documentation-needs
    attributes:
      label: 📚 Documentation Requirements
      description: What documentation would be needed for this feature?
      placeholder: |
        - API documentation updates
        - Usage examples
        - Migration guide (if breaking changes)
        - Performance guidelines
        - Best practices documentation
    validations:
      required: false

  - type: dropdown
    id: implementation-timeline
    attributes:
      label: ⏰ Desired Timeline
      description: When would you ideally like to see this feature?
      options:
        - "🚀 Next patch release (within 1 month)"
        - "📈 Next minor release (within 3 months)"
        - "🎯 Next major release (within 6 months)"
        - "🔮 Future consideration (no specific timeline)"
      default: 2
    validations:
      required: true

  - type: checkboxes
    id: contribution-willingness
    attributes:
      label: 🤝 Contribution
      description: Would you be willing to contribute to this feature?
      options:
        - label: I'm willing to implement this feature myself
        - label: I can provide detailed requirements and testing
        - label: I can help with documentation and examples
        - label: I can provide code review and feedback
        - label: I can sponsor priority development of this feature

  - type: textarea
    id: additional-context
    attributes:
      label: 📎 Additional Context
      description: Add any other context, links, or references
      placeholder: |
        - Links to similar features in other libraries
        - Research papers or articles
        - Screenshots or mockups
        - Related issues or discussions
    validations:
      required: false

  - type: checkboxes
    id: checklist
    attributes:
      label: ✅ Pre-Submission Checklist
      description: Please confirm you have completed these steps
      options:
        - label: I have searched existing issues and discussions for similar requests
          required: true
        - label: I have provided clear business justification for this feature
          required: true
        - label: I have described specific use cases and scenarios
          required: true
        - label: I have considered the implementation impact and requirements
          required: true
        - label: I understand this is governed by the Business Source License 1.1
          required: true
