# .cargo/config.toml
#![warn(missing_docs)]
#![deny(unsafe_code)]
#!
#! **Brief:** ArcMoon Studios Enterprise Cargo Configuration with CI/Dev Mode Upgrade Support.
#!
#! **Module Classification:** Standard
#! **Complexity Level:** Medium
#! **API Stability:** Stable
#! 
#! ## Mathematical Properties
#!
#! **Algorithmic Complexity:**
#! - Time Complexity: O(1) for environment variable lookup
#! - Space Complexity: O(1) constant configuration overhead
#! - Concurrency Safety: Thread-safe environment variable access
#!
#! **Performance Characteristics:**
#! - Expected Performance: Instantaneous configuration application
#! - Worst-Case Scenarios: Negligible overhead on cargo operations
#! - Optimization Opportunities: Environment-based conditional execution
# ~=####====A===r===c===M===o===o===n====S===t===u===d===i===o===s====X|0|$>
#! + Environment variable detection for CI/Dev mode dependency upgrades
#!  - CARGO_ARCMOON_UPGRADE: Boolean flag to enable cargo upgrade operations
#!  - Git safety integration with uncommitted change detection
#!  - Performance optimization with parallel job configuration
#!  - Cross-platform compatibility for Windows/Linux/macOS development
# ~=####====A===r===c===M===o===o===n====S===t===u===d===i===o===s====X|0|$>
# **GitHub:** [ArcMoon Studios](https://github.com/arcmoonstudios)
# **Copyright:** (c) 2025 ArcMoon Studios  
# **License:** MIT OR Apache-2.0
# **License Terms:** Non-production use only; commercial/production use requires paid license.
# **Effective Date:** 2025-05-25 | **MIT OR Apache-2.0
# **License File:** /LICENSE
# **Contact:** LordXyn@proton.me
# **Author:** Lord Xyn
# **Last Validation:** 2025-05-29

[env]
# ArcMoon Studios CI/Dev Mode Upgrade Flag
# Set to "true" to enable automated dependency upgrades during development
# Usage: CARGO_ARCMOON_UPGRADE=true make check
CARGO_ARCMOON_UPGRADE = { value = "false", force = false, relative = false }

# Performance optimization for parallel builds
# CARGO_BUILD_JOBS = { value = "0", force = false, relative = false }  # 0 = auto-detect CPU cores

# Enhanced error reporting for development
RUST_BACKTRACE = { value = "1", force = false, relative = false }

# Cargo term color for CI environments
CARGO_TERM_COLOR = { value = "always", force = false, relative = false }

[build]
# Parallel compilation optimization
# jobs = 0  # Auto-detect available CPU cores (commented out to avoid error)

# Target directory optimization for Windows
target-dir = "target"

# Incremental compilation for faster development builds
incremental = true

[target.x86_64-pc-windows-msvc]
# Windows-specific optimizations
rustflags = [
    "-C", "target-cpu=native",
    "-C", "opt-level=3"
]

[target.x86_64-unknown-linux-gnu]
# Linux-specific optimizations
rustflags = [
    "-C", "target-cpu=native",
    "-C", "opt-level=3"
]

[target.x86_64-apple-darwin]
# macOS-specific optimizations
rustflags = [
    "-C", "target-cpu=native",
    "-C", "opt-level=3"
]

[cargo-new]
# Default template for new projects
name = "ArcMoon Studios Enterprise"
email = "LordXyn@proton.me"
vcs = "git"

[registry]
# Secure registry configuration
default = "crates-io"

[registry.crates-io]
protocol = "sparse"

[net]
# Network optimization
retry = 3
offline = false